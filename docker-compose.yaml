services:
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=pass
    networks:
      default:
        aliases:
          - mongo
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo-express:
    image: mongo-express
    ports:
      - "${MONGO_EXPRESS_PORT}:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=pass
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_AUTH_USERNAME=admin
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=pass
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped

  bot:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "${API_PORT}:8000"
    environment:
      - BOTSPOT_MONGO_DATABASE_CONN_STR=mongodb://admin:pass@mongodb:27017/admin?authSource=admin
      - BOTSPOT_MONGO_DATABASE_DATABASE=${MONGODB_DATABASE:-test}
      # - MONGODB_URL=mongodb://admin:pass@mongodb:27017
      # - MONGODB_DATABASE=${MONGODB_DATABASE:-test}
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  mongodb_data:
  mongodb_config: 